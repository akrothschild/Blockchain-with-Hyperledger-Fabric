{"remainingRequest":"/Users/richardwindsorair/Documents/GitHub/COVID19/covid19/node_modules/babel-loader/lib/index.js!/Users/richardwindsorair/Documents/GitHub/COVID19/covid19/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/richardwindsorair/Documents/GitHub/COVID19/covid19/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/richardwindsorair/Documents/GitHub/COVID19/covid19/src/components/LineChart.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/richardwindsorair/Documents/GitHub/COVID19/covid19/src/components/LineChart.vue","mtime":1602185786200},{"path":"/Users/richardwindsorair/Documents/GitHub/COVID19/covid19/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/richardwindsorair/Documents/GitHub/COVID19/covid19/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/richardwindsorair/Documents/GitHub/COVID19/covid19/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/richardwindsorair/Documents/GitHub/COVID19/covid19/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0IHsgTGluZSB9IGZyb20gInZ1ZS1jaGFydGpzIjsKZXhwb3J0IGRlZmF1bHQgewogIGV4dGVuZHM6IExpbmUsCiAgcHJvcHM6IHsKICAgIGxhYmVsOiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfSwKICAgIGNoYXJ0RGF0YTogewogICAgICB0eXBlOiBBcnJheQogICAgfSwKICAgIG9wdGlvbnM6IHsKICAgICAgdHlwZTogT2JqZWN0CiAgICB9LAogICAgY2hhcnRDb2xvcnM6IHsKICAgICAgdHlwZTogT2JqZWN0CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIGRhdGVzID0gdGhpcy5jaGFydERhdGEubWFwKGZ1bmN0aW9uIChkKSB7CiAgICAgIHJldHVybiBkLmRhdGU7CiAgICB9KS5yZXZlcnNlKCk7CiAgICB2YXIgdG90YWxzID0gdGhpcy5jaGFydERhdGEubWFwKGZ1bmN0aW9uIChkKSB7CiAgICAgIHJldHVybiBkLnRvdGFsOwogICAgfSkucmV2ZXJzZSgpOwogICAgdmFyIF90aGlzJGNoYXJ0Q29sb3JzID0gdGhpcy5jaGFydENvbG9ycywKICAgICAgICBib3JkZXJDb2xvciA9IF90aGlzJGNoYXJ0Q29sb3JzLmJvcmRlckNvbG9yLAogICAgICAgIHBvaW50Qm9yZGVyQ29sb3IgPSBfdGhpcyRjaGFydENvbG9ycy5wb2ludEJvcmRlckNvbG9yLAogICAgICAgIHBvaW50QmFja2dyb3VuZENvbG9yID0gX3RoaXMkY2hhcnRDb2xvcnMucG9pbnRCYWNrZ3JvdW5kQ29sb3IsCiAgICAgICAgYmFja2dyb3VuZENvbG9yID0gX3RoaXMkY2hhcnRDb2xvcnMuYmFja2dyb3VuZENvbG9yOwogICAgdGhpcy5yZW5kZXJDaGFydCh7CiAgICAgIGxhYmVsczogZGF0ZXMsCiAgICAgIGRhdGFzZXRzOiBbewogICAgICAgIGxhYmVsOiB0aGlzLmxhYmVsLAogICAgICAgIGRhdGE6IHRvdGFscywKICAgICAgICBib3JkZXJDb2xvcjogYm9yZGVyQ29sb3IsCiAgICAgICAgcG9pbnRCb3JkZXJDb2xvcjogcG9pbnRCb3JkZXJDb2xvciwKICAgICAgICBwb2ludEJhY2tncm91bmRDb2xvcjogcG9pbnRCYWNrZ3JvdW5kQ29sb3IsCiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBiYWNrZ3JvdW5kQ29sb3IKICAgICAgfV0KICAgIH0sIHRoaXMub3B0aW9ucyk7CiAgfQp9Ow=="},{"version":3,"sources":["/Users/richardwindsorair/Documents/GitHub/COVID19/covid19/src/components/LineChart.vue"],"names":[],"mappings":";AACA,SAAS,IAAT,QAAqB,aAArB;AAEA,eAAe;AACb,EAAA,OAAO,EAAE,IADI;AAEb,EAAA,KAAK,EAAE;AACL,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EAAE;AADD,KADF;AAIL,IAAA,SAAS,EAAE;AACT,MAAA,IAAI,EAAE;AADG,KAJN;AAOL,IAAA,OAAO,EAAE;AACP,MAAA,IAAI,EAAE;AADC,KAPJ;AAUL,IAAA,WAAW,EAAE;AACX,MAAA,IAAI,EAAE;AADK;AAVR,GAFM;AAgBb,EAAA,OAhBa,qBAgBH;AACR,QAAM,KAAI,GAAI,KAAK,SAAL,CAAe,GAAf,CAAmB,UAAA,CAAA;AAAA,aAAK,CAAC,CAAC,IAAP;AAAA,KAAnB,EAAgC,OAAhC,EAAd;AACA,QAAM,MAAK,GAAI,KAAK,SAAL,CAAe,GAAf,CAAmB,UAAA,CAAA;AAAA,aAAK,CAAC,CAAC,KAAP;AAAA,KAAnB,EAAiC,OAAjC,EAAf;AAFQ,4BASJ,KAAK,WATD;AAAA,QAKN,WALM,qBAKN,WALM;AAAA,QAMN,gBANM,qBAMN,gBANM;AAAA,QAON,oBAPM,qBAON,oBAPM;AAAA,QAQN,eARM,qBAQN,eARM;AAWR,SAAK,WAAL,CACE;AACE,MAAA,MAAM,EAAE,KADV;AAEE,MAAA,QAAQ,EAAE,CACR;AACE,QAAA,KAAK,EAAE,KAAK,KADd;AAEE,QAAA,IAAI,EAAE,MAFR;AAGE,QAAA,WAAW,EAAE,WAHf;AAIE,QAAA,gBAAgB,EAAE,gBAJpB;AAKE,QAAA,oBAAoB,EAAE,oBALxB;AAME,QAAA,eAAe,EAAE;AANnB,OADQ;AAFZ,KADF,EAcE,KAAK,OAdP;AAgBF;AA3Ca,CAAf","sourcesContent":["<script>\nimport { Line } from \"vue-chartjs\";\n\nexport default {\n  extends: Line,\n  props: {\n    label: {\n      type: String\n    },\n    chartData: {\n      type: Array\n    },\n    options: {\n      type: Object\n    },\n    chartColors: {\n      type: Object\n    }\n  },\n  mounted() {\n    const dates = this.chartData.map(d => d.date).reverse();\n    const totals = this.chartData.map(d => d.total).reverse();\n\n    const {\n      borderColor,\n      pointBorderColor,\n      pointBackgroundColor,\n      backgroundColor\n    } = this.chartColors;\n\n    this.renderChart(\n      {\n        labels: dates,\n        datasets: [\n          {\n            label: this.label,\n            data: totals,\n            borderColor: borderColor,\n            pointBorderColor: pointBorderColor,\n            pointBackgroundColor: pointBackgroundColor,\n            backgroundColor: backgroundColor\n          }\n        ]\n      },\n      this.options\n    );\n  }\n};\n</script>\n"],"sourceRoot":""}]}